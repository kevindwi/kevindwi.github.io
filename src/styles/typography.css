@reference './global.css';

@layer components {
  .prose {
    @apply text-black text-base leading-8;
    @apply [&>*]:first:mt-0 [&>*]:last:mb-0 [&>section:first-child>*]:mt-0 [&>section:last-child>*]:mb-0;

    p {
      @apply text-black/80 my-5 leading-7 not-first:mt-5;
    }

    h1 {
      @apply text-black mt-0 mb-6 scroll-m-20 text-3xl leading-tight font-medium;
    }

    h2 {
      @apply text-black mt-8 mb-4 scroll-m-20 text-2xl leading-tight font-medium;
    }

    h3 {
      @apply text-black mt-6 mb-4 scroll-m-20 text-xl leading-snug font-medium;
    }

    h4 {
      @apply text-black mt-6 mb-3 scroll-m-20 text-lg leading-normal font-medium;
    }

    h5 {
      @apply text-black mt-5 mb-3 scroll-m-20 leading-normal font-medium;
    }

    h6 {
      @apply text-black mt-5 mb-3 scroll-m-20 leading-normal font-medium;
    }

    a {
      @apply text-black break-words underline underline-offset-[3px] transition-colors;
    }

    strong {
      @apply text-black font-medium;
    }

    ul {
      @apply ml-6 list-disc [&>li]:mt-2;
    }

    ol {
      @apply ml-6 list-decimal [&>li]:mt-2;
      @apply [&[type='A']]:list-[upper-alpha] [&[type='I']]:list-[upper-roman] [&[type='a']]:list-[lower-alpha] [&[type='i']]:list-[lower-roman];
    }

    li {
      @apply text-black/80 pl-2 leading-5 [&>p]:my-0;
    }

    ul ul,
    ol ol,
    ul ol,
    ol ul {
      @apply my-2 ml-6;
    }

    :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      @apply bg-slate-300/60 relative rounded-sm px-[0.3rem] py-[0.2rem] text-sm;
      font-family: "Source Code Pro", monospace;
    }

    :where(a code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      color: inherit;
    }

    :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      color: var(--tw-prose-pre-code);
      background-color: var(--tw-prose-pre-bg);
      overflow-x: auto;
      font-weight: 400;
      font-size: 0.875em;
      line-height: 1.7142857;
      margin-top: 1.7142857em;
      margin-bottom: 1.7142857em;
      border-radius: 0.375rem;
      padding-top: 0.8571429em;
      padding-inline-end: 1.1428571em;
      padding-bottom: 0.8571429em;
      padding-inline-start: 1.1428571em;
    }

    :where(pre code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      background-color: transparent;
      border-width: 0;
      border-radius: 0;
      padding: 0;
      font-weight: inherit;
      color: inherit;
      font-size: inherit;
      font-family: inherit;
      line-height: inherit;
    }

    :where(pre code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      )::before {
      content: none;
    }

    :where(pre code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      )::after {
      content: none;
    }

    .expressive-code {
      @apply my-6 [&_.title]:font-medium!;
    }

    blockquote {
      @apply [&_*]:text-slate-700 my-6 border-l-2 pl-6;
    }

    hr {
      @apply h-px text-slate-200 border-0 my-8 border-t;
    }

    table {
      @apply my-8 w-full text-sm;
    }

    thead {
      @apply border-slate-600/30 border-b;
    }

    th {
      @apply border px-4 py-2 text-left font-medium [&[align=center]]:text-center [&[align=right]]:text-right;
    }

    tbody tr {
      @apply border-slate-600/20 even:bg-slate-600/50 border-b;
    }

    td {
      @apply border px-4 py-2 text-left [&[align=center]]:text-center [&[align=right]]:text-right;
    }

    img,
    video {
      @apply my-8 rounded-lg;
    }

    figure {
      @apply my-8;
    }

    figcaption {
      @apply text-slate-500;
    }

    em {
      @apply text-slate-500;
    }

    kbd {
      @apply text-black bg-slate-300 rounded-md px-2 py-1 text-xs font-medium;
    }

    .katex-display {
      @apply my-6 overflow-x-auto overflow-y-hidden py-2 tracking-normal;
    }
  }
}
